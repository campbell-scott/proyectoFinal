paths:
  /api/users:
    get:
      tags:
        - 'Users'
      summary: 'Return a list of users'
      operationId: 'getProducts'
      description: 'Allowed only for users roles that have getUsers'
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of users to retrieve (optional)
        - in: query
          name: page
          schema:
            type: integer
          description: Page number (optional)
      produces:
        - 'application/json'
      responses:
        '200':
          description: 'A JSON array of users'
          schema:
            type: 'object'
            properties:
              products:
                type: 'array'
                items:
                  $ref: '#/components/schemas/Users'
        '401':
          description: 'Empty authentication header!'
        '403':
          description: 'Authentication error'
        '500':
          description: 'Internal server error'
    post:
      tags:
        - 'Users'
      summary: 'Create a new user'
      operationId: 'addUser'
      description: 'Allowed only for users roles that have addUser'
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBody'
      responses:
        '200':
          description: 'Return created user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 'Invalid request body'
        '500':
          description: 'Internal server error'
  /api/users/{id}:
    get:
      tags:
        - 'Users'
      summary: 'Get user by id'
      operationId: 'getUser'
      description: 'Allowed only for users roles that have getUser'
      security:
        - BearerAuth: []
      parameters:
        - in: 'path'
          name: id
          schema:
            type: string
          required: true
          description: 'ID of the user'
      responses:
        '200':
          description: 'Return a user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: 'Id not found.'
        '500':
          description: Internal server error
    put:
      tags:
        - 'Users'
      summary: 'Update user by id'
      operationId: 'updateUser'
      description: 'Allowed only for users roles that have updateUser'
      security:
        - BearerAuth: []
      parameters:
        - in: 'path'
          name: id
          schema:
            type: string
          required: true
          description: 'ID of the user to update'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBody'
      responses:
        '200':
          description: 'Return updated user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 'Invalid request body'
        '404':
          description: 'Id not found.'
        '500':
          description: Internal server error
    delete:
      tags:
        - 'Users'
      summary: 'Delete user by id'
      operationId: 'deleteUser'
      description: 'Allowed only for users roles that have deleteUser'
      security:
        - BearerAuth: []
      parameters:
        - in: 'path'
          name: id
          schema:
            type: string
          required: true
          description: 'ID of the user to delete'
      responses:
        '200':
          description: User deleted.
        '404':
          description: 'Id not found.'
        '500':
          description: Internal server error